miso/security/cors_config.py:33:        self.api_key = os.getenv("API_KEY")
miso/security/cors_config.py:39:        if not self.api_key and os.getenv("ENVIRONMENT") == "production":
miso/security/cors_config.py:64:def verify_api_key(credentials: Optional[HTTPAuthorizationCredentials] = Depends(security)) -> bool:
miso/security/cors_config.py:66:    if not security_config.api_key:
miso/security/cors_config.py:76:    if credentials.credentials != security_config.api_key:
miso/security/cors_config.py:126:    if not security_config.api_key:
miso/security/cors_config.py:130:    api_key = websocket.query_params.get("api_key") or websocket.headers.get("x-api-key")
miso/security/cors_config.py:132:    if not api_key or api_key != security_config.api_key:
miso/supply_chain/artifact_signer.py:147:        secret_key = os.getenv("MISO_SIGNING_KEY", "miso-development-key-do-not-use-in-production")
miso/supply_chain/artifact_signer.py:161:            secret_key.encode(),
miso/supply_chain/artifact_signer.py:305:            secret_key = os.getenv("MISO_SIGNING_KEY", "miso-development-key-do-not-use-in-production")
miso/supply_chain/artifact_signer.py:311:                secret_key.encode(),
security/ztm_validator.py:23:        self.secret_key = b'miso_ultimate_ztm_secret_key_2025'  # In Produktion aus sicherer Quelle laden
security/ztm_validator.py:95:                    self.secret_key, 
security/ztm_validator.py:198:                        self.secret_key,
security/void/void_protocol.py:85:        self.secret_key = os.urandom(32)
security/void/void_protocol.py:230:        message.signature = hmac.new(self.secret_key, message_data.encode(), hashlib.sha256).hexdigest()
security/void/void_protocol.py:299:            h = hmac.new(self.secret_key, data_bytes, hashlib.sha256)
security/void/void_protocol.py:336:                h = hmac.new(self.secret_key, data_bytes, hashlib.sha256)
security/void/void_context.py:35:        self.secret_key = os.urandom(32)
security/void/void_context.py:83:        signature = hmac.new(self.secret_key, context_data.encode(), hashlib.sha256).hexdigest()
security/test_ztm_void_integration.py:93:            self.assertIsNotNone(verifier.secret_key, "Secret Key nicht generiert")
security/QUARANTINE_ZONE/secret_sweep_scanner.py:20:            'api_key': r'api[_-]?key["\s]*[=:]["\s]*[a-zA-Z0-9]{20,}',
security/QUARANTINE_ZONE/secret_sweep_scanner.py:21:            'secret_key': r'secret[_-]?key["\s]*[=:]["\s]*[a-zA-Z0-9]{20,}',
security/QUARANTINE_ZONE/quick_secret_sweep.py:30:            'api_key': r'(api[_-]?key|API[_-]?KEY)["\s]*[=:]["\s]*["\'][a-zA-Z0-9]{16,}["\']',
security/QUARANTINE_ZONE/quick_secret_sweep.py:84:                        'type': 'SECRET' if name in ['api_key', 'secret', 'token', 'ssh_key', 'github_pat'] else 'SUSPICIOUS',
.github/workflows/ci.yml:254:          if grep -r "api_key\|password\|secret" --include="*.py" . | grep -v "test\|example"; then
